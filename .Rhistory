bar + stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
labs(x = "Film", y = "Mean Arousal", fill = "Gender") +
scale_fill_manual("Gender", values = c("Female" = "#3366FF", "Male" = "#336633"))
bar <- ggplot(chickFlick, aes(chickFlick$film, chickFlick$arousal, fill = chickFlick$gender))
bar + stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90), width = 0.2) +
labs(x = "Film", y = "Mean Arousal", fill = "Gender") +
scale_fill_manual("Gender", values = c("Female" = "#3366FF", "Male" = "#336633"))
festivalData <- read.delim("./data/Hiccups.dat", header = TRUE)
write.csv(festivalData, "./data/Hiccups.csv", row.names = FALSE)
hiccups <- read.csv("./data/Hiccups.csv", header = TRUE)
View(hiccups)
str(hiccups)
summary(hiccups)
hiccupsData <- read.csv("./data/Hiccups.csv", header = TRUE)
View(hiccupsData)
str(hiccupsData)
summary(hiccupsData)
hiccups <- stack(hiccupsData)
View(hiccups)
str(hiccups)
summary(hiccups)
names(hiccups) <- c("Hiccups", "Intervention")
View(hiccups)
str(hiccups)
hiccups$Intervention_Factor <- factor(hiccups$Intervention, levels(hiccups$Intervention)[c(1, 4, 2, 3)])
View(hiccups)
str(hiccups)
hiccupsData <- read.csv("./data/Hiccups.csv", header = TRUE)
View(hiccupsData)
str(hiccupsData)
summary(hiccupsData)
hiccups <- stack(hiccupsData)
names(hiccups) <- c("Hiccups", "Intervention")
View(hiccups)
str(hiccups)
summary(hiccups)
line <- ggplot(hiccups, aes(hiccups$Intervention, hiccups$Hiccups))
line + stat_summary(fun.y = mean, geom = "point")
line + stat_summary(fun.y = mean, geom = "line", aes(group = 1))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 2))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 15))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 13))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1), colour = "Blue", linetype = "dashed")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1), colour = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1), colour = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2)
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1), colour = "Blue", linetype = "dashed") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Intervention", y = "Mean Number of Hiccups")
festivalData <- read.delim("./data/TextMessages.dat", header = TRUE)
write.csv(festivalData, "./data/TextMessages.csv", row.names = FALSE)
textData <- read.csv("./data/TextMessages.csv", header = TRUE)
View(TextData)
View(textData)
str(textData)
summary(textData)
library(reshape)
install.packages("reshape")
library(reshape)
summary(textData)
text <- melt(textData, id = c("Group"), measured = c("Baseline", "Six_months"))
View(text)
names(text) <- c("Group", "Time", "Grammer_Score")
View(text)
line <- ggplot(text, aes(text$Time, text$Grammer, colour = text$Group))
line + stat_summary(fun.y = mean, geom = "point")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = 1))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group))
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group), linetype = c("dashed", "dotted")) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
bar <- ggplot(chickFlick, aes(chickFlick$film, chickFlick$arousal))
bar + stat_summary(fun.y = mean, geom = "bar", fill = "white", colour = "Black") +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", colour = "Red") +
labs(x = "Film", y = "Mean Arousal")
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
version
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc")
library(Hmisc)
line + stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.y = mean, geom = "line", aes(group = text$Group)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.2) +
labs(x = "Time", y = "Mean Grammer Score", colour = "Group")
friends = c(1, 2, 3, 3, 4)
mean(friends)
snsData <- data.frame(Id = user_ids, FriendNumber <- friends)
user_ids <- c(1, 2, 3, 4, 5)
snsData <- data.frame(Id = user_ids, FriendNumber <- friends)
snsData <- data.frame(Id = user_ids, FriendNumber = friends)
mean(snsData$FriendNumber)
library(ggplot2)
deviance <- ggplot(snsData, aes(snsData$Id, snsData$FriendNumber))
deviance + geom_line()
deviance + geom_point()
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line")
deviance + geom_point() + stat_summary(fun.data = mean, geom = "line")
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line")
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line", aes(group = 1))
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line", aes(group = 2))
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line", aes(group = 5))
deviance + geom_point() + stat_summary(fun.y = mean, geom = "line",aes(group=1))
deviance + geom_point() +
geom_hline(yintercept = mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue") +
geom_hline(yintercept = mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber), colour = "Red")
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_vline(xintercept = snsData$FriendNumber - mean(snsData$FriendNumber))
snsData$FriendNumber - mean(snsData$FriendNumber)
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_vline(data = snsData$FriendNumber - mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_line()
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_line(data = snsData$FriendNumber - mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar")
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber)))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha("Red", alpha = 0.5)))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5)
setwd("~/work/statistics-R/")
racers <- c("Alonso", "Schumacher", "Hamilton", "Vettel", "Ricciardo")
worldChampionRacers <- racers[racers != "Ricciardo"]
activeRaceres <- racers[racers != "Schumacher"]
racers <- c(racers, 'Max')
racersNames <- racers
racersAges <- c(39, 51, 36, 34, 32, 23)
length(racersNames)
length(racersAges)
f1 <- data.frame(Name = racersNames, Age = racersAges)
View(f1)
f1$Name
f1$Age
f1$worldChampionWins <- c(2,7,5,4,0,0)
f1$childAge <- c(14,27,9,12,5,2)
f1$fatherhoodAge <- f1$Age - f1$childAge
View(f1)
birth_day <- c('1981-07-29', '1969-01-03', '1985-01-07', '1987-07-03', '1989-07-01', '1997-09-30')
birth_day[1] - birth_day[6] # Error
birth_day <- as.Date(c('1981-07-29', '1969-01-03', '1985-01-07', '1987-07-03', '1989-07-01', '1997-09-30'))
birth_day[1] - birth_day[6]
f1$birthDay <- birth_day
age_diff <- Sys.Date() - birth_day
# 그룹화 변수(grouping variable)/요인(factor)/부호화 변수(coding variable)
job <- c(1,1,1,1,1,2,2,2,2,2)
job <- c(rep(1, 5), rep(2, 5))
job <- factor(job, levels = c(1:2), labels = c("Racer", "Engineer"))
job
job <- gl(2, 5, labels = c("Racer", "Engineer"))
job
levels(job)
levels(job) <- c("F1 Racer", "F1 Engineer")
job
names <- c("Alonso", "Schumacher", "Hamilton", "Vettel", "Ricciardo", "Tony", "Ryan", "Cooper", "Bennet", "Jaewoo")
friends <- c(10, NA, 25, 12, 23, 2, 3, 6, 10, NA)
income <- c(2200, 2500, 3100, 3000, 850, 30, 20, 15, 20, 100)
f1Data <- data.frame(names, job, friends, income)
View(f1Data)
mean(f1Data$friends)
mean(f1Data$friends, na.rm = TRUE)
write.csv(f1Data, "f1Data.csv", row.names = FALSE)
titanic <- read.csv("./data/titanic.csv", header = TRUE, row.names = 1)
View(titanic)
summary(titanic$Survived)
summary(titanic$Sex)
summary(titanic)
str(titanic)
##### dataframe[ (rows..) , (columns..)]
titanicCore <- titanic[, c("Survived", "Pclass", "Sex", "Age")]
summary(titanicCore)
titanicFemale <- titanic[titanic$Sex=="female", c("Survived", "Pclass", "Sex")]
View(titanicFemale)
mean(titanicFemale$Survived)
titanicOlder <- titanic[titanic$Age < 20, ]
View(titanicOlder)
is.na(titanic$Age)
sum(is.na(titanic$Age))
as.integer(mean(titanic$Age, na.rm = TRUE))
titanic$Age[is.na(titanic$Age)] <- as.integer(mean(titanic$Age, na.rm = TRUE))
titanic$Age[is.na(titanic$Age)]
titanicYounger <- titanic[titanic$Age < 10, c("Survived", "Pclass", "Sex")]
View(titanicYounger)
mean(titanicYounger$Survived)
femaleOrYoung <- titanic[titanic$Sex == "female" | titanic$Age < 10, c("Survived", "Pclass", "Sex", "Age")]
View(femaleOrYoung)
mean(femaleOrYoung$Survived)
# subset
titanicOlder <- subset(titanic, titanic$Age > 40, select = c("Survived", "Pclass", "Sex", "Age"))
mean(titanicOlder$Survived)
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5))
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 2))
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 2))
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 2)) +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 2)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 2, linetype = "dashed")) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red")) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 2) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red")) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 1.5)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 1)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 3) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5, linetype=3)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5, linetype=a)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5, linetype="dashed")) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5, linetype=3)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
errors = snsData$FriendNumber - mean(snsData$FriendNumber)
errors
sum(errors)
0.4 + 0.4 + 1.4 - 0.6 - 1.6
sum(errors)
sum(errors) > -1
sum(errors) > 1
sum(errors) > 0.1
sum(errors) < -0.1
round(sum(errors))
sum(errors)
sum(c(1,2,3,4))
sum(c(0.1,0.1,0.1,0.1))
sum(c(0.1,0.1,0.1,-0.1))
sum(c(0.1,0.1,-0.1,-0.1))
sum(c(-1.6, -0.6, 0.4, 0.4, 1.4))
sum(c(-1.6, -0.6, 0.4, 0.4))
sum(c(-1.6, -0.6, 0.4, 0.4, 1.4))
sum(c(-1.6, -0.6, 0.4, 0.4))
sum(c(-1.6, -0.6, 0.4, 0.4)) + 1.4
sum(c(1.4, -1.6, -0.6, 0.4, 0.4))
errors
sum(errors)
round(sum(errors))
var(errors)
sd(errors)
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends") +
theme(legend.position = "none")
var(snsData$FriendNumber)
sd(snsData$FriendNumber)
deviance + geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData$FriendNumber)) +
geom_segment(aes(xend = snsData$Id, yend = mean(snsData$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData$FriendNumber))) +
theme(legend.position = "none")
snsData2 <- data.frame(Id = user_ids, FriendNumber = friends2)
friends2 <- c(2, 3, 3, 3, 2)
friends3 <- c(4, 1, 5, 1, 2)
snsData2 <- data.frame(Id = user_ids, FriendNumber = friends2)
mean(snsData2$FriendNumber)
snsData3 <- data.frame(Id = user_ids, FriendNumber = friends3)
mean(snsData3$FriendNumber)
deviance2 <- ggplot(snsData2, aes(snsData2$Id, snsData2$FriendNumber)) +
geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData2$FriendNumber)) +
geom_segment(aes(xend = snsData2$Id, yend = mean(snsData2$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData2$FriendNumber))) +
theme(legend.position = "none")
deviance3 <- ggplot(snsData3, aes(snsData3$Id, snsData3$FriendNumber)) +
geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData3$FriendNumber)) +
geom_segment(aes(xend = snsData3$Id, yend = mean(snsData3$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData3$FriendNumber))) +
theme(legend.position = "none")
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(deviance2, deviance2, nrow=1, ncol=2)
friends3 <- c(4, 1, 5, 1, 2)
snsData3 <- data.frame(Id = user_ids, FriendNumber = friends3)
mean(snsData3$FriendNumber)
grid.arrange(deviance2, deviance3, nrow=1, ncol=2)
deviance2 <- ggplot(snsData2, aes(snsData2$Id, snsData2$FriendNumber)) +
geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData2$FriendNumber)) +
geom_segment(aes(xend = snsData2$Id, yend = mean(snsData2$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData2$FriendNumber))) +
coord_cartesian(ylim=c(0, 5)) +
theme(legend.position = "none")
library(ggplot2)
deviance2 <- ggplot(snsData2, aes(snsData2$Id, snsData2$FriendNumber)) +
geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData2$FriendNumber)) +
geom_segment(aes(xend = snsData2$Id, yend = mean(snsData2$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData2$FriendNumber))) +
coord_cartesian(ylim=c(0, 5)) +
theme(legend.position = "none")
deviance3 <- ggplot(snsData3, aes(snsData3$Id, snsData3$FriendNumber)) +
geom_point(colour = "Blue", size = 5) +
geom_hline(yintercept = mean(snsData3$FriendNumber)) +
geom_segment(aes(xend = snsData3$Id, yend = mean(snsData3$FriendNumber), alpha = 0.5, colour = "Red", size = 0.5)) +
labs(x = "User Id", y = "# of Friends", title = paste("sd: ", sd(snsData3$FriendNumber))) +
coord_cartesian(ylim=c(0, 5)) +
theme(legend.position = "none")
grid.arrange(deviance2, deviance3, nrow=1, ncol=2)
p1
p1 <- ggplot(data = data.frame(x = c(-100, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 55, sd = 25)) + ylab("") +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 55, sd = 25)) + ylab("") +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("") +
scale_y_continuous(breaks = NULL)
p1
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("")
p1
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("")
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 15)) + ylab("")
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("") +
scale_y_continuous(breaks = NULL)
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 15)) + ylab("") +
scale_y_continuous(breaks = NULL)
grid.arrange(p1, p2, nrow=1, ncol=2)
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 15)) + ylab("") +
coord_cartesian(ylim=c(0, 0.1))
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("") +
coord_cartesian(ylim=c(0, 0.1))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("") +
coord_cartesian(ylim=c(0, 0.3))
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 15)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 1000, args = list(mean = 50, sd = 25)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 25)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 15)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 45)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 10)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 35)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 15)) + ylab("") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 35)) +
labs(y = "", title = "sd: 25") +
coord_cartesian(ylim=c(0, 0.03))
p1 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 35)) +
labs(y = "", title = "sd: 35") +
coord_cartesian(ylim=c(0, 0.03))
p2 <- ggplot(data = data.frame(x = c(0, 100)), aes(x)) +
stat_function(fun = dnorm, n = 100, args = list(mean = 50, sd = 15)) +
labs(y = "", title = "sd: 15") +
coord_cartesian(ylim=c(0, 0.03))
grid.arrange(p1, p2, nrow=1, ncol=2)
ggplot(data.frame(x=c(-3,3)), aes(x=x)) +
stat_function(fun=dnorm, colour="blue", size=1) +
ggtitle("Normal Distribution")
dnorm_range <- function(x) {
y <- dnorm(x)
y[x < -1.96 | x > 1.96] <- NA  # 이 범위에는 색깔 없음
return(y)
}
ggplot(data.frame(x=c(-3,3)), aes(x=x)) +
stat_function(fun=dnorm, colour="blue", size=1) +
stat_function(fun=dnorm_rage, geom = "area", fill="grey", alpha = 0.5) +
ggtitle("Normal Distribution")
return(y)
dnorm_range <- function(x) {
y <- dnorm(x)
y[x < -1.96 | x > 1.96] <- NA  # 이 범위에는 색깔 없음
return(y)
}
ggplot(data.frame(x=c(-3,3)), aes(x=x)) +
stat_function(fun=dnorm, colour="blue", size=1) +
stat_function(fun=dnorm_range, geom = "area", fill="grey", alpha = 0.5) +
ggtitle("Normal Distribution")
StudyTime <- read.csv("./data/StudyTime.csv", header = TRUE)
View(StudyTime)
histogram + geom_histogram()
histogram <- ggplot(StudyTime, aes(done_second))
