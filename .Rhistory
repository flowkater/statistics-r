marketing <- read.csv("./data/Marketing Revenue.csv", header = T)
melted_marketing <- melt(marketing)
names(melted_marketing) <- c("channel", "count")
melted_marketing$id <- as.numeric(row.names(melted_marketing))
View(melted_marketing)
marketing.SST <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_segment(aes(xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5))
marketing.SST
melted_marketing$channel
melted_marketing$id[c(0,1)] <-
marketing.SST <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_segment(aes(xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5))
melted_marketing[c(1,2)]$id <-
marketing.SST <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_segment(aes(xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5))
melted_marketing[c(1,2)]$id
melted_marketing[]$id
melted_marketing[c(1,)]$id
melted_marketing$channel
levels(melted_marketing$channel)
c(levels(melted_marketing$channel))
levels(melted_marketing$channel)
for(channel in levels(melted_marketing$channel)){
print(channel)
}
melted_marketing[melted_marketing$channel == "SMS", ]
melted_marketing[melted_marketing$channel == "SMS", ]
melted_marketing
marketing <- read.csv("./data/Marketing Revenue.csv", header = T)
melted_marketing <- melt(marketing)
names(melted_marketing) <- c("channel", "count")
melted_marketing$id <- as.numeric(row.names(melted_marketing))
View(melted_marketing)
melted_marketing[melted_marketing$channel == "SMS", ]
melted_marketing
melted_marketing[melted_marketing$channel == "SMS", ]
melted_marketing[melted_marketing$channel == "SMS", ]$id
melted_marketing[melted_marketing$channel == "SMS", ]$mean <- mean(melted_marketing[melted_marketing$channel == "SMS", ])
melted_marketing$mean <- 0
melted_marketing[melted_marketing$channel == "SMS", ]$mean <- mean(melted_marketing[melted_marketing$channel == "SMS", ])
melted_marketing[melted_marketing$channel == "SMS", ]$mean <- mean(melted_marketing[melted_marketing$channel == "SMS", ]$count)
melted_marketing
melted_marketing$mean <- 0
for(channel in levels(melted_marketing$channel)){
melted_marketing[melted_marketing$channel == channel, ]$mean <- mean(melted_marketing[melted_marketing$channel == channel, ]$count)
}
melted_marketing
head(melted_marketing, 10)
head(melted_marketing, 20)
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count))
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_hline(yintercept = melted_marketing$mean)
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
marketing.SSM
melted_marketing.SST <- ggplot(marketing, aes(size, gsr)) +
geom_segment(aes(xend = size, yend = mean(spider$gsr)), alpha = .2) +
geom_hline(yintercept = mean(spider$gsr), color = "lightgrey") +
geom_point() +
labs(x = "거미 크기", y = "불안(GSR)", title = "SST")
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
marketing.SSM
melted_marketing.SST <- ggplot(marketing, aes(size, gsr)) +
geom_segment(aes(xend = size, yend = mean(spider$gsr)), alpha = .2) +
geom_hline(yintercept = mean(spider$gsr), color = "lightgrey") +
geom_point() +
labs(x = "거미 크기", y = "불안(GSR)", title = "SST")
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count))
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(aes(yintercept = melted_marketing$mean, col = melted_marketing$channel))  +
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(aes(yintercept = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(y = melted_marketing$mean, xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
grid.arrange(marketing.SST, marketing.SSR, marketing.SSM, ncol = 2, nrow = 2)
marketing.SSR <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSR
grid.arrange(marketing.SST, marketing.SSR, marketing.SSM, ncol = 2, nrow = 2)
grid.arrange(marketing.SST, marketing.SSR, marketing.SSM, ncol = 2, nrow = 2)
grid.arrange(marketing.SST, marketing.SSR,
marketing.SSE, nrow = 2, ncol = 2)
grid.arrange(marketing.SST, marketing.SSR,
marketing.SSM, nrow = 2, ncol = 2)
marketing.SST <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_segment(aes(xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5))
marketing.SST
marketing.SSR <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSR
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(y = melted_marketing$mean, xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
grid.arrange(marketing.SST, marketing.SSR,
marketing.SSM, nrow = 2, ncol = 2)
marketing.SSM + theme(legend.position = "none")
grid.arrange(marketing.SST+ theme(legend.position = "none"), marketing.SSR+ theme(legend.position = "none"),
marketing.SSM, nrow = 2, ncol = 2)
SSM
SSR
k = length(levels(melted_marketing$channel))
k = length(levels(melted_marketing$channel));k
n = lengths(melted_marketing);n
n = lengths(melted_marketing$id);n
n = length(melted_marketing$id);n
n = length(melted_marketing);n
n = length(melted_marketing$id);n
MSM = SSM / (k-2);MSM
MSR = SSR / (n-k);MSR
k <- length(levels(melted_marketing$channel));k
n <- length(melted_marketing$id);n
MSM <- SSM / (k-2);MSM
MSR <- SSR / (n-k);MSR
f_value <- MSM/MSR
f_value <- MSM/MSR;f_value
qf(.95, k-2, n-k)
qf(.95, n-k, k-2)
f_value <- MSM/MSR;f_value
qf(.95, k-2, n-k)
qf(k-2, n-k)
1 - qf(.95, k-2, n-k)
pf(f_value, k-2, n-k)
pf(f_value, n-k, k-2)
1 - pf(f_value, n-k, k-2)
qf(.05, k-2, n-k)
qf(.95, k-2, n-k)
pf(f_value, n-k, k-2)
pf(f_value, n-k, k-2, lower.tail = T)
pf(f_value, k-2, n-k, lower.tail = T)
pf(f_value, k-2, n-k, lower.tail = F)
pf(f_value, k-2, n-k)
qf(k-2, n-k)
qf(k-2, n-k, lower.tail = T)
pf(f_value, k-2, n-k)
qf(0.95, k-2, n-k)
qf(0.95, k-2, n-k)
pf(f_value, k-2, n-k, lower.tail = F)
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
+   stat_function(fun=df, args=list(df1=k-2, df2=n-k), colour="blue", size=1) +
+   annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
+   annotate("text", x=4.3, y=1.4, label="F(df1=k-2, df2=n-k)") +
+   ggtitle("F Distribution")
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
+   stat_function(fun=df, args=list(df1=k-2, df2=n-k), colour="blue", size=1) +
+   annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
+   annotate("text", x=4.3, y=1.4, label="F(df1=k-2, df2=n-k)")
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
+   stat_function(fun=df, args=list(df1=k-2, df2=n-k), colour="blue", size=1)
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=k-2, df2=n-k), colour="blue", size=1)
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=k-2, df2=n-k), colour="blue", size=1) +
annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
annotate("text", x=4.3, y=1.4, label="F(df1=k-2, df2=n-k)")
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=5, df2=10), colour="blue", size=1) +
stat_function(fun=df, args=list(df1=10, df2=30), colour="red", size=2) +
stat_function(fun=df, args=list(df1=50, df2=100), colour="yellow", size=3) +
annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
annotate("segment", x=3, xend=3.5, y=1.2, yend=1.2, colour="red", size=2) +
annotate("segment", x=3, xend=3.5, y=1.0, yend=1.0, colour="yellow", size=3) +
annotate("text", x=4.3, y=1.4, label="F(df1=5, df2=10)") +
annotate("text", x=4.3, y=1.2, label="F(df1=10, df2=30)") +
annotate("text", x=4.3, y=1.0, label="F(df1=50, df2=100)")
k - 1
MSM <- SSM / (k-1);MSM
MSR <- SSR / (n-k);MSR
f_value <- MSM/MSR;f_value
qf(0.95, k-1, n-k)
pf(f_value, k-1, n-k, lower.tail = F)
n <- length(melted_marketing$id);n
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=k-1, df2=n-k), colour="blue", size=1) +
annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
annotate("text", x=4.3, y=1.4, label="F(df1=k-2, df2=n-k)")
ggplot(data.frame(x=c(0,5)), aes(x=x)) +
stat_function(fun=df, args=list(df1=k-1, df2=n-k), colour="blue", size=1)
ggplot(data.frame(x=c(0:1000)), aes(x=x)) +
stat_function(fun=df, args=list(df1=k-1, df2=n-k), colour="blue", size=1) +
annotate("segment", x=3, xend=3.5, y=1.4, yend=1.4, colour="blue", size=1) +
annotate("text", x=4.3, y=1.4, label="F(df1=k-2, df2=n-k)")
x <- c(0:1000);x
x <- c(0:1000)
y <- df(x, k-1, n-k);y
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line()
x <- c(0:100)
y <- df(x, k-1, n-k)
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line()
x <- c(0:10)
y <- df(x, k-1, n-k)
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line()
ggplot(data.frame(x=x,y=y)) +
geom_line(aes(x=x, y=y))
ggplot(data.frame(x=x,y=y)) +
geom_point(aes(x=x, y=y))
ggplot(data.frame(x=x,y=y)) +
geom_point(aes(x=x, y=y)) +
geom_line()
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_point() +
geom_line()
x <- c(0:10, 1000)
y <- df(x, k-1, n-k)
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_point() +
geom_line()
x <- c(0:1000 / 100)
y <- df(x, k-1, n-k)
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_point() +
geom_line()
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line()
k - 1
n- k
ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line() +
labs(title = "자유도 df1 = 5 (k-1), 자유도 df2 = 66 (n-k) F 분포",
x = "F 값",
y = "밀도")
F_plot <- ggplot(data.frame(x=x,y=y), aes(x=x, y=y)) +
geom_line() +
labs(title = "자유도 df1 = 5 (k-1), 자유도 df2 = 66 (n-k) F 분포",
x = "F 값",
y = "밀도");F_plot
F_plot + geom_vline(xintercept = f_value)
F_plot + geom_vline(xintercept = f_value) + geom_vline(qf(0.95, k-1, n-k))
F_plot + geom_vline(xintercept = f_value) + geom_vline(xintercept = qf(0.95, k-1, n-k))
pf(f_value, k-1, n-k, lower.tail = F)
v <- read.csv("./data/Viagra.csv", header = T)
View(v)
str(melted_marketing)
marketing.aov <- aov(count ~ channel, data = melted_marketing)
summary(marketing.aov)
f_value <- MSM/MSR;f_value
library(truncnorm)
rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 5)
round(rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 5), 2)
round(rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 5), 0)
round(rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 2), 0)
round(rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 10), 0)
round(rtruncnorm(20, a = 0, b = 20, mean = 10, sd = 10), 0)
round(rtruncnorm(20, a = 40, b = 60, mean = 10, sd = 10), 0)
round(rtruncnorm(20, a = 80, b = 100, mean = 10, sd = 10), 0)
sample(x = c(0:20), size = 20)
sample(x = c(0:20), size = 20)
sample(x = c(40:60), size = 20)
sample(x = c(80:100), size = 20)
exam <- read.csv("./data/Exam Score by howto.csv", header = T)
View(exam)
View(marketing)
str(marketing)
str(exam)
exam <- read.csv("./data/Exam Score by howto.csv", header = T)
str(exam)
boxplot(exam)
marketing.lm <- lm(count ~ channel, data = melted_marketing)
summary(marketing.lm)
summary(marketing.aov)
plot(marketing.aov)
marketing.oneway
marketing.oneway <- oneway.test(count ~ channel, data = melted_marketing)
summary(marketing.oneway)
marketing.oneway
plot(melted_marketing$count)
plot(marketing.aov)
plot(melted_marketing$count)
hist(melted_marketing$count)
histogram(marketing)
histogram(marketing$SMS)
hist(marketing$SMS)
hist(marketing)
hist(marketing$Facebook)
summary.lm(marketing.aov)
boxplot(marketing)
spiderLong <- read.csv("./data/SpiderLong.csv", header = T)
str(spiderLong)
summary(spiderLong)
head(spiderLong)
spiderLong.bar <- ggplot(spiderLong, aes(Group, Anxiety)) +
stat_summary(fun.y = mean, geom = "bar", fill = "white", colour = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", colour = "Red") +
coord_cartesian(ylim=c(0, 70))
spiderLong.bar
spiderWide <- read.csv("./data/SpiderWide.csv", header = T)
str(spiderWider)
summary(spiderWider)
melted_spiderWide <- melt(spiderWide)
names(melted_spiderWide) <- c("Group", "Anxiety")
head(melted_spiderWide)
spiderWide.bar  <- ggplot(melted_spiderWide, aes(Group, Anxiety)) +
stat_summary(fun.y = mean, geom = "bar", fill = "white", colour = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", colour = "Red") +
coord_cartesian(ylim=c(0, 70))
spiderWide.bar
grid.arrange(spiderLong.bar, spiderWide.bar, nrow=1, ncol=2)
spiderWide$pMean <- (spiderWide$picture + spiderWide$real) / 2;spiderWide$pMean
grandMean <- mean(c(spiderWide$picture, spiderWide$real));grandMean
spiderWide$adj <- grandMean - spiderWide$pMean;spiderWide$adj
spiderWide$picture_adj <- spiderWide$picture + spiderWide$adj
spiderWide$real_adj <- spiderWide$real + spiderWide$adj
spiderWide$pMean2 <- (spiderWide$picture_adj + spiderWide$real_adj) / 2;spiderWide$pMean2
head(spiderWide)
spiderWide
spiderWideAdj <- spiderWide[, c("picture_adj", "real_adj")]
head(spiderWideAdj)
melted_spiderWideAdj <- melt(spiderWideAdj)
names(melted_spiderWideAdj) <- c("Group", "Anxiety")
head(melted_spiderWideAdj)
spiderWideAdj.bar  <- ggplot(melted_spiderWideAdj, aes(Group, Anxiety)) +
stat_summary(fun.y = mean, geom = "bar", fill = "white", colour = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", colour = "Red") +
coord_cartesian(ylim=c(0, 70))
spiderWideAdj.bar
grid.arrange(spiderLong.bar, spiderWideAdj.bar, nrow=1, ncol=2)
spiderWideAdj.bar  <- ggplot(melted_spiderWideAdj, aes(Group, Anxiety)) +
stat_summary(fun.y = mean, geom = "bar", fill = "white", colour = "Black") +
stat_summary(fun.data = mean_cl_normal, geom = "pointrange", colour = "Blue") +
coord_cartesian(ylim=c(0, 70))
spiderWideAdj.bar
grid.arrange(spiderLong.bar, spiderWideAdj.bar, nrow=1, ncol=2)
install.packages("compute.es")
install.packages("multcomp")
library(ggplot2)
library(reshape2)
library(gridExtra)
library(compute.es)
library(multcomp)
library(pastecs)
library(WRS2)
marketing <- read.csv("./data/Marketing Revenue.csv", header = T)
str(marketing)
View(marketing)
boxplot(marketing)
boxplot(marketing)
total_array <- c(marketing$SMS, marketing$Push, marketing$Banner, marketing$Email, marketing$Blog, marketing$Facebook);total_array
total_mean <- mean(total_array);total_mean
marketing$meanSMS <- mean(marketing$SMS)
marketing$meanPush <- mean(marketing$Push)
marketing$meanBanner <- mean(marketing$Banner)
marketing$meanEmail <- mean(marketing$Email)
marketing$meanBlog <- mean(marketing$Blog)
marketing$meanFacebook <- mean(marketing$Facebook)
head(marketing)
SST <- sum((total_array - total_mean)^2);SST
SSM <- sum((marketing$meanSMS - total_mean)^2) +
sum((marketing$meanPush - total_mean)^2) +
sum((marketing$meanBanner - total_mean)^2) +
sum((marketing$meanEmail - total_mean)^2) +
sum((marketing$meanBlog - total_mean)^2) +
sum((marketing$meanFacebook - total_mean)^2);SSM
SSR <- sum((marketing$SMS - marketing$meanSMS)^2) +
sum((marketing$Push - marketing$meanPush)^2) +
sum((marketing$Banner - marketing$meanBanner)^2) +
sum((marketing$Email - marketing$meanEmail)^2) +
sum((marketing$Blog - marketing$meanBlog)^2) +
sum((marketing$Facebook - marketing$meanFacebook)^2);SSR
SST
SSM + SSR
SST == SSM + SSR
marketing <- read.csv("./data/Marketing Revenue.csv", header = T)
melted_marketing <- melt(marketing)
names(melted_marketing) <- c("channel", "count")
melted_marketing$id <- as.numeric(row.names(melted_marketing))
View(melted_marketing)
melted_marketing$mean <- 0
for(channel in levels(melted_marketing$channel)){
melted_marketing[melted_marketing$channel == channel, ]$mean <- mean(melted_marketing[melted_marketing$channel == channel, ]$count)
}
head(melted_marketing, 20)
marketing.SST <- ggplot(melted_marketing, aes(id, count, colour = melted_marketing$channel)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_segment(aes(xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5))
marketing.SST
marketing.SSR <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(xend = melted_marketing$id, yend = melted_marketing$mean, alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSR
marketing.SSM <- ggplot(melted_marketing, aes(id, count, colour = channel)) +
geom_segment(aes(y = melted_marketing$mean, xend = melted_marketing$id, yend = mean(melted_marketing$count), alpha = 0.5)) +
geom_point() +
geom_hline(yintercept = mean(melted_marketing$count)) +
geom_line(aes(y = melted_marketing$mean, col = melted_marketing$channel))
marketing.SSM
grid.arrange(marketing.SST+ theme(legend.position = "none"), marketing.SSR+ theme(legend.position = "none"),
marketing.SSM, nrow = 2, ncol = 2)
exam <- read.csv("./data/Exam Score by howto.csv", header = T)
summary(exam)
View(exam)
w_squared <- function(ssm, sst, dfm, msr) {
return((ssm - (dfm*msr)) / (sst + msr))
}
SSM
SST
dfm
dfm <- k-1
dfr <- k-1
dfm
SSR
MSR
w_squared(SSM, SST, dfm, MSR)
summary.lm(marketing.aov)
w_squared(SSM, SST, dfm, MSR)
mean(marketing$Facebook)
sd(marketing$Banner)
sd(marketing$Facebook)
mean(marketing$Banner)
sd(marketing$Banner)
lenght(marketing$Facebook)
length(marketing$Facebook)
length(marketing$Banner)
mes(mean(marketing$Facebook), mean(marketing$Banner), sd(marketing$Facebook), sd(marketing$Banner), length(marketing$Facebook), length(marketing$Banner))
mean(marketing$Facebook)
mean(marketing$Banner)
sd(marketing$Facebook)
sd(marketing$Banner)
rcontrast <- function(t, df){
return(sqrt(t^2 / (t^2 + df)))
}
contrast1 <- c(1, 1, -1, -1, -1, 1)
contrast2 <- c(-1, -1, 0, 0, 0, 2)
contrasts(melted_marketing$channel) <- cbind(contrast1, contrast2, 0, 0, 0)
contrasts(melted_marketing$channel)
marketing.aov <- aov(count ~ channel, data = melted_marketing)
summary.lm(marketing.aov)
summary(marketing.aov)
aovlm <- summary.lm(marketing.aov)
aovlm
aovlm$fstatistic
aovlm$statistics
aov <- summary(marketing.aov)
aov <- summary(marketing.aov)
aovlm$coefficients
aovlm$coefficients[1]
aovlm$coefficients[[1,3]]
t1 <- aovlm$coefficients[[2,3]];t1
t2 <- aovlm$coefficients[[3,3]];t2
read.csv("./data/Viagra.csv", header = T)
N <- 72
p <- 2
df <- N - p - 1
df <- N - p - 1;df
rcontrast(t1, df)
rcontrast(t2, df)
setwd("~/work/statistics-r/")
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
theme_set(theme_gray(base_family="AppleGothic"))
par(family = "AppleGothic")
spider <- read.csv("./data/spider-gsr.csv", header = TRUE)
spider.lm <- lm(gsr ~ size, data = spider)
AIC(spider.lm)
